{"version":3,"file":"static/js/139.2259bcdf.chunk.js","mappings":"wTAgBaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,IAAD,CAAMC,GAAG,WAAWC,MAAM,SAASC,QAAQ,SAASC,EAAE,QAAtD,UACE,SAAC,KAAD,CAAKH,GAAG,QAAQI,EAAG,EAAGC,QAAQ,KAAKC,EAAG,GAAtC,UACE,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,YAAY,EACZC,KAAM,IAERC,SAAU,SAAAC,GACR,IAAQF,EAA0BE,EAA1BF,KAAMH,EAAoBK,EAApBL,MAAOC,EAAaI,EAAbJ,SACrBX,GACEgB,EAAAA,EAAAA,IAAS,CACPH,KAAMA,EACNH,MAAOA,EACPC,SAAUA,IAGf,EAhBH,SAkBG,gBAAGM,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACC,iBAAML,SAAUG,EAAhB,UACE,UAAC,IAAD,CAAQG,QAAS,EAAGjB,MAAM,aAA1B,WACE,UAAC,KAAD,YACE,SAAC,IAAD,CAAWkB,QAAQ,OAAnB,wBACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,OACHX,KAAK,OACLY,KAAK,OACLC,QAAQ,eAGZ,UAAC,KAAD,YACE,SAAC,IAAD,CAAWL,QAAQ,QAAnB,4BACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,QACHX,KAAK,QACLY,KAAK,QACLC,QAAQ,eAGZ,UAAC,KAAD,CAAaC,YAAaT,EAAOP,UAAYQ,EAAQR,SAArD,WACE,SAAC,IAAD,CAAWU,QAAQ,WAAnB,uBACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,WACHX,KAAK,WACLY,KAAK,WACLC,QAAQ,SACRE,SAAU,SAAAC,GACR,IAAIC,EAMJ,OAJID,EAAME,OAAS,IACjBD,EAAQ,+CAGHA,CACR,KAEH,SAAC,KAAD,UAAmBZ,EAAOP,eAG5B,SAAC,KAAD,CACEW,GAAIU,EAAAA,EACJR,GAAG,aACHX,KAAK,aACLoB,YAAY,SAJd,2BAQA,SAAC,IAAD,CAAQR,KAAK,SAASQ,YAAY,OAAOC,MAAM,OAA/C,yBApDL,OA8DV,ECpGc,SAASC,IACtB,OAAO,SAACpC,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\n\nimport { register } from 'redux/auth/operations';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex bg=\"gray.100\" align=\"center\" justify=\"center\" h=\"100vh\">\n      <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n            rememberMe: false,\n            name: '',\n          }}\n          onSubmit={values => {\n            const { name, email, password } = values;\n            dispatch(\n              register({\n                name: name,\n                email: email,\n                password: password,\n              })\n            );\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"name\">User Name</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    validate={value => {\n                      let error;\n\n                      if (value.length < 7) {\n                        error = 'Password must contain at least 7 characters';\n                      }\n\n                      return error;\n                    }}\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n\n                <Field\n                  as={Checkbox}\n                  id=\"rememberMe\"\n                  name=\"rememberMe\"\n                  colorScheme=\"purple\"\n                >\n                  Remember me?\n                </Field>\n                <Button type=\"submit\" colorScheme=\"teal\" width=\"full\">\n                  Sign Up\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return <RegisterForm />;\n}\n"],"names":["RegisterForm","dispatch","useDispatch","bg","align","justify","h","p","rounded","w","initialValues","email","password","rememberMe","name","onSubmit","values","register","handleSubmit","errors","touched","spacing","htmlFor","as","Input","id","type","variant","isInvalid","validate","value","error","length","Checkbox","colorScheme","width","Register"],"sourceRoot":""}