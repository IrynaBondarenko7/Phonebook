{"version":3,"file":"static/js/960.8d943d15.chunk.js","mappings":"2UAiBaA,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAE1B,OACE,UAAC,IAAD,CACEC,GAAG,WACHC,MAAM,SACNC,QAAQ,SACRC,EAAE,QACFC,cAAc,SALhB,UAOGP,IACC,SAAC,IAAD,CAAMQ,SAAS,KAAKC,MAAM,UAAUC,GAAG,OAAvC,2DAIF,SAAC,KAAD,CAAKP,GAAG,QAAQQ,EAAG,EAAGC,QAAQ,KAAKC,EAAG,GAAtC,UACE,SAAC,KAAD,CACEC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,YAAY,GAEdC,SAAU,SAAAC,GACR,IAAQJ,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAEflB,GACEsB,EAAAA,EAAAA,IAAM,CACJL,MAAOA,EACPC,SAAUA,IAGf,EAfH,SAiBG,gBAAGK,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACC,iBAAML,SAAUG,EAAhB,UACE,UAAC,IAAD,CAAQG,QAAS,EAAGpB,MAAM,aAA1B,WACE,UAAC,KAAD,YACE,SAAC,IAAD,CAAWqB,QAAQ,QAAnB,4BACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,QAAQ,eAGZ,UAAC,KAAD,CAAaC,YAAaV,EAAON,UAAYO,EAAQP,SAArD,WACE,SAAC,IAAD,CAAWS,QAAQ,WAAnB,uBACA,SAAC,KAAD,CACEC,GAAIC,EAAAA,EACJC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,QAAQ,SACRE,SAAU,SAAAC,GACR,IAAIlC,EAMJ,OAJIkC,EAAMC,OAAS,IACjBnC,EAAQ,+CAGHA,CACR,KAEH,SAAC,KAAD,UAAmBsB,EAAON,eAG5B,SAAC,KAAD,CACEU,GAAIU,EAAAA,EACJR,GAAG,aACHC,KAAK,aACLQ,YAAY,SAJd,2BAQA,SAAC,IAAD,CAAQP,KAAK,SAASO,YAAY,OAAOC,MAAM,OAA/C,wBA1CL,QAoDV,ECtGc,SAASC,IACtB,OAAO,SAAC1C,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n  Text,\n} from '@chakra-ui/react';\nimport { logIn } from 'redux/auth/operations';\nimport { selectErrorLogIn } from 'redux/auth/selectors';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectErrorLogIn);\n\n  return (\n    <Flex\n      bg=\"gray.100\"\n      align=\"center\"\n      justify=\"center\"\n      h=\"100vh\"\n      flexDirection=\"column\"\n    >\n      {error && (\n        <Text fontSize=\"lg\" color=\"#E74C3C\" mb=\"10px\">\n          The password or email is entered incorrectly\n        </Text>\n      )}\n      <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n        <Formik\n          initialValues={{\n            email: '',\n            password: '',\n            rememberMe: false,\n          }}\n          onSubmit={values => {\n            const { email, password } = values;\n\n            dispatch(\n              logIn({\n                email: email,\n                password: password,\n              })\n            );\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl>\n                  <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    validate={value => {\n                      let error;\n\n                      if (value.length < 7) {\n                        error = 'Password must contain at least 7 characters';\n                      }\n\n                      return error;\n                    }}\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n\n                <Field\n                  as={Checkbox}\n                  id=\"rememberMe\"\n                  name=\"rememberMe\"\n                  colorScheme=\"purple\"\n                >\n                  Remember me?\n                </Field>\n                <Button type=\"submit\" colorScheme=\"teal\" width=\"full\">\n                  Log In\n                </Button>\n              </VStack>\n            </form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return <LoginForm />;\n}\n"],"names":["LoginForm","dispatch","useDispatch","error","useSelector","selectErrorLogIn","bg","align","justify","h","flexDirection","fontSize","color","mb","p","rounded","w","initialValues","email","password","rememberMe","onSubmit","values","logIn","handleSubmit","errors","touched","spacing","htmlFor","as","Input","id","name","type","variant","isInvalid","validate","value","length","Checkbox","colorScheme","width","Login"],"sourceRoot":""}